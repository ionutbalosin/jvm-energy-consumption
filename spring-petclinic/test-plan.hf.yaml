name: test-plan-benchmark
http:
  host: http://192.168.0.186:8080
  sharedConnections: 1024
phases:

# Workload simulating users browsing through the website
- browseWebsite:
    constantRate:
      duration: 780s
      usersPerSec: 12
      maxSessions: 256
      scenario:  
      - getHomePage:
        - httpRequest:
            GET: /
            sla:
            - errorRatio: 2.0            
      - getFindOwnersPage:
        - httpRequest:
            GET: /owners/find
            sla:
            - errorRatio: 2.0 
      - getVetsPage:
        - httpRequest:
            GET: /vets.html
            sla:
            - errorRatio: 2.0             
      - getPetClinicCss:
        - httpRequest:
            GET: /resources/css/petclinic.css
            sla:
            - errorRatio: 2.0             
      - getBootstrapJs:
        - httpRequest:
            GET: /webjars/bootstrap/5.2.3/dist/js/bootstrap.bundle.min.js
            sla:
            - errorRatio: 2.0             
      - getFontAwesomeCss:
        - httpRequest:
            GET: /webjars/font-awesome/4.7.0/css/font-awesome.min.css
            sla:
            - errorRatio: 2.0 

# Workload simulating users searching for owners
- searchForOwners:
    increasingRate:
      duration: 780s
      initialUsersPerSec: 1
      targetUsersPerSec: 14
      maxSessions: 256
      scenario:
      # Generate random 1-digit number for a partial last name search
      - findOwnersByLastName_partialMatch_1digit:
        - randomInt:
            min: 1
            max: 9
            toVar: 1digit
        - httpRequest:
            GET:
              pattern: /owners?lastName=${1digit}
            sla:
            - errorRatio: 2.0 
            handler:
              followRedirect: NEVER
      # Generate random 2 digits number for a partial last name search
      - findOwnersByLastName_partialMatch_2digits:
        - randomInt:
            min: 10
            max: 99
            toVar: 2digits
        - httpRequest:
            GET:
              pattern: /owners?lastName=${2digits}
            sla:
            - errorRatio: 2.0 
            handler:
              followRedirect: NEVER
        # Generate random 3 digits number for a partial last name search
      - findOwnersByLastName_partialMatch_3digits:
        - randomInt:
            min: 100
            max: 999
            toVar: 3digits
        - httpRequest:
            GET:
              pattern: /owners?lastName=${3digits}
            sla:
            - errorRatio: 2.0               
            handler:
              followRedirect: NEVER

# Workload simulating adding new owners with pets
# This could increase by time since the platform is becoming more popular
- addOwnersWithPets:
    increasingRate:
      duration: 780s
      initialUsersPerSec: 1
      targetUsersPerSec: 12
      maxSessions: 256
      scenario:
        - generateRandomValues:
          - randomInt:
              min: 100000000
              max: 999999999
              toVar: randomNumber
          - randomItem:
              list: [ "bird", "cat", "dog", "hamster", "lizard", "snake" ]
              toVar: randomPetType
          - randomItem:
              list: [ "2001-01-01", "2002-02-02", "2003-03-03", "2004-04-04", "2005-05-05", "2006-06-06", "2007-07-07", "2008-08-08", "2009-09-09", "2010-10-10" ]
              toVar: randomDate
        - postOwner:
          - unset: newOwnerRedirectUrl
          - httpRequest:
              POST: /owners/new
              sla:
              - errorRatio: 2.0                  
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                - name: firstName
                  value: Owner
                - name: lastName
                  fromVar: randomNumber
                - name: address
                  pattern: Address ${randomNumber}
                - name: telephone
                  fromVar: randomNumber
                - name: city
                  pattern: City ${randomNumber}
              handler:
                followRedirect: NEVER
                header:
                  filter:
                    header:
                      value: location
                    processor:
                      store: newOwnerRedirectUrl
        - getOwner:
          - httpRequest:
              GET:
                fromVar: newOwnerRedirectUrl
              sla:
              - errorRatio: 2.0                 
        - getEditOwner:
          - httpRequest:
              GET:
                pattern: ${newOwnerRedirectUrl}/edit
              sla:
              - errorRatio: 2.0                 
        - postEditOwner:
          - httpRequest:
              POST:
                pattern: ${newOwnerRedirectUrl}/edit
              sla:
              - errorRatio: 2.0                 
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: firstName
                    value: Owner
                  - name: lastName
                    pattern: ${randomNumber} upd
                  - name: address
                    pattern: Address ${randomNumber} upd
                  - name: telephone
                    fromVar: randomNumber
                  - name: city
                    pattern: City ${randomNumber} upd
              handler:
                followRedirect: NEVER
        - postPet:
          - httpRequest:
              POST:
                pattern: ${newOwnerRedirectUrl}/pets/new
              sla:
              - errorRatio: 2.0                 
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: name
                    pattern: Pet ${randomNumber}
                  - name: birthDate
                    fromVar: randomDate
                  - name: type
                    fromVar: randomPetType
              handler:
                followRedirect: NEVER
        - getPets:
          - httpRequest:
              GET:
                pattern: ${newOwnerRedirectUrl}/pets/new
              sla:
              - errorRatio: 2.0 

# Workload simulating adding pet's visits
# This could be quite frequent and with bursts (i.e., increasing) during pandemic times
- addPetsVisits:
    increasingRate:
      duration: 780s
      initialUsersPerSec: 1
      targetUsersPerSec: 10
      maxSessions: 256
      scenario:
        - generateRandomValues:
            # Only for the first 3 entities ownerId is the same as petId. This is configured while the DB is prefilled with data
            - randomInt:
                min: 1
                max: 3
                toVar: ownerIdSameAsPetId
            - randomItem:
                list: [ "2001-01-01", "2002-02-02", "2003-03-03", "2004-04-04", "2005-05-05", "2006-06-06", "2007-07-07", "2008-08-08", "2009-09-09", "2010-10-10" ]
                toVar: randomDate
        - getEditPet:
          - httpRequest:
              GET:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/edit
              sla:
              - errorRatio: 2.0                 
        - postVisit:
          - httpRequest:
              POST:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/visits/new
              sla:
              - errorRatio: 2.0                   
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: date
                    fromVar: randomDate
                  - name: description
                    pattern: Visit ${ownerIdSameAsPetId}
              handler:
                followRedirect: NEVER
        - getVisit:
          - httpRequest:
              GET:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/visits/new
              sla:
              - errorRatio: 2.0                    
