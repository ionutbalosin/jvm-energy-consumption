name: test-plan-benchmark
http:
  host: http://127.0.0.1:8080
  sharedConnections: 128
phases:
# Workload simulating browsing through the website
- browsingWebsite:
    constantRate:
      duration: 600s
      usersPerSec: 10
      scenario:
      - getHomePage:
        - httpRequest:
            GET: /
      - getVetsPage:
        - httpRequest:
            GET: /vets.html
      - getPetClinicCss:
        - httpRequest:
            GET: /resources/css/petclinic.css
      - getBootstrapJs:
        - httpRequest:
            GET: /webjars/bootstrap/5.2.3/dist/js/bootstrap.bundle.min.js
# Workload simulating searching for owners
- findingOwners:
    constantRate:
      duration: 600s
      usersPerSec: 8
      scenario:
      - findOwners:
        - httpRequest:
            GET: /owners/find
        # Generate random 1-digit number for a partial last name search
      - findOwnersByLastName_partialMatch_1digit:
          - randomInt:
              min: 1
              max: 9
              toVar: 1digit
          - httpRequest:
              GET:
                pattern: /owners?lastName=${1digit}
              handler:
                followRedirect: NEVER
      # Generate random 2 digits number for a partial last name search
      - findOwnersByLastName_partialMatch_2digits:
        - randomInt:
            min: 10
            max: 99
            toVar: 2digits
        - httpRequest:
            GET:
              pattern: /owners?lastName=${2digits}
            handler:
              followRedirect: NEVER
        # Generate random 3 digits number for a partial last name search
      - findOwnersByLastName_partialMatch_3digits:
          - randomInt:
              min: 100
              max: 999
              toVar: 3digits
          - httpRequest:
              GET:
                pattern: /owners?lastName=${3digits}
              handler:
                followRedirect: NEVER
# Workload simulating add/edit owners, pets and visits
- postAndUpdateOwnersWithPets:
    constantRate:
      duration: 600s
      usersPerSec: 6
      maxSessions: 24
      scenario:
        - generateRandomValues:
          - randomInt:
              min: 100000000
              max: 999999999
              toVar: randomNumber
          # Only for the first 3 entities ownerId is the same as petId. This is configured while the DB is prefilled with data
          - randomInt:
              min: 1
              max: 3
              toVar: ownerIdSameAsPetId
          - randomItem:
              list: [ "bird", "cat", "dog", "hamster", "lizard", "snake" ]
              toVar: randomPetType
          - randomItem:
              list: [ "2001-01-01", "2002-02-02", "2003-03-03", "2004-04-04", "2005-05-05", "2006-06-06", "2007-07-07", "2008-08-08", "2009-09-09", "2010-10-10" ]
              toVar: randomDate
        - postOwner:
            - unset: newOwnerRedirectUrl
            - httpRequest:
                POST: /owners/new
                headers:
                  content-type: application/x-www-form-urlencoded
                body:
                  form:
                    - name: firstName
                      value: Owner
                    - name: lastName
                      fromVar: randomNumber
                    - name: address
                      pattern: Address ${randomNumber}
                    - name: telephone
                      fromVar: randomNumber
                    - name: city
                      pattern: City ${randomNumber}
                handler:
                  followRedirect: NEVER
                  header:
                    filter:
                      header:
                        value: location
                      processor:
                        store: newOwnerRedirectUrl
        - getOwner:
          - httpRequest:
              GET:
                fromVar: newOwnerRedirectUrl
        - getEditOwner:
          - httpRequest:
              GET:
                pattern: ${newOwnerRedirectUrl}/edit
        - postEditOwner:
          - httpRequest:
              POST:
                pattern: ${newOwnerRedirectUrl}/edit
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: firstName
                    value: Owner
                  - name: lastName
                    pattern: ${randomNumber} upd
                  - name: address
                    pattern: Address ${randomNumber} upd
                  - name: telephone
                    fromVar: randomNumber
                  - name: city
                    pattern: City ${randomNumber} upd
              handler:
                followRedirect: NEVER
        - postPet:
          - httpRequest:
              POST:
                pattern: ${newOwnerRedirectUrl}/pets/new
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: name
                    pattern: Pet ${randomNumber}
                  - name: birthDate
                    fromVar: randomDate
                  - name: type
                    fromVar: randomPetType
              handler:
                followRedirect: NEVER
        - getPets:
          - httpRequest:
              GET:
                pattern: ${newOwnerRedirectUrl}/pets/new
        - getEditPet:
          - httpRequest:
              GET:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/edit
        - postEditPet:
          - httpRequest:
              POST:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/edit
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: id
                    fromVar: ownerIdSameAsPetId
                  - name: name
                    pattern: Pet ${randomNumber}
                  - name: birthDate
                    fromVar: randomDate
                  - name: type
                    fromVar: randomPetType
        - postVisit:
          - httpRequest:
              POST:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/visits/new
              headers:
                content-type: application/x-www-form-urlencoded
              body:
                form:
                  - name: date
                    fromVar: randomDate
                  - name: description
                    pattern: Visit ${randomNumber}
              handler:
                followRedirect: NEVER
        - getVisit:
          - httpRequest:
              GET:
                pattern: /owners/${ownerIdSameAsPetId}/pets/${ownerIdSameAsPetId}/visits/new