name: test-plan-benchmark
http:
  host: http://192.168.0.186:8080
  sharedConnections: 1536
phases:

# Workload simulating users browsing through the website
- browseWebsite:
    constantRate:
      duration: 780s
      usersPerSec: 64
      maxSessions: 128
      scenario:
        - getHomePage:
            - httpRequest:
                GET: /

# Workload simulating users creating, reading, updating and deleting fruits
- crudFruits:
    increasingRate:
      duration: 780s
      initialUsersPerSec: 1
      targetUsersPerSec: 312
      maxSessions: 1024
      scenario:
      # Note: scenario steps are sequentially executed
      - generateRandomValues:
        - randomItem:
            list: [ "Apple", "Bananas", "Oranges", "Pineapple", "Grape", "Strawberry", "Watermelon", "Pears", "Cherries", "Peach", "Lemon", "Avocado", "Blueberries", "Raspberry", "Blackberry", "Plums", "Muskmelon", "Papaya", "Mangoes" ]
            toVar: fruitName
        - randomInt: randomNumber <- 1 .. 999999
      - postFruit:
        - httpRequest:
            POST: /entity/fruits
            headers:
              content-type: application/json
            body: |
              {
                "name" : "${fruitName} - ${randomNumber}"
              }
            handler:
              body:
                json:
                  query: .id
                  toVar: fruitId
      - getAllFruits:
        - httpRequest:
            GET: /entity/fruits
            handler:
              body:
                json:
                  query: '.[].id'
                  toArray: 'fruitIds[1024]'
        - getSize:
            fromVar: fruitIds
            toVar: length
        - fail:
            intCondition:
              fromVar: length
              lessThan: 3
      - getFruitById:
        - httpRequest:
            GET: '/entity/fruits/${fruitId}'
      - putFruitById:
        - httpRequest:
            PUT: '/entity/fruits/${fruitId}'
            headers:
              content-type: application/json
            body: |
              {
                "name" : "${fruitName} - ${randomNumber} upd"
              }
      - deleteFruitById:
        - httpRequest:
            DELETE: '/entity/fruits/${fruitId}'
