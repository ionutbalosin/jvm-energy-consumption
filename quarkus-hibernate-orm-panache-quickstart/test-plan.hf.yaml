name: test-plan-benchmark
http:
  host: http://192.168.0.2:8080
  sharedConnections: 48
duration: 1800s
usersPerSec: 4
maxSessions: 48
scenario:
  # Note: scenario steps are sequentially executed
  - generateRandomValues:
      - randomItem:
          list: [ "Apple", "Bananas", "Oranges", "Pineapple", "Grape", "Strawberry", "Watermelon", "Pears", "Cherries", "Peach", "Lemon", "Avocado", "Blueberries", "Raspberry", "Blackberry", "Plums", "Muskmelon", "Papaya", "Mangoes" ]
          toVar: fruitName
      - randomInt: randomNumber <- 1 .. 999999
  - getHomePage:
      - httpRequest:
          GET: /
  - postFruit:
      - httpRequest:
          POST: /entity/fruits
          headers:
            content-type: application/json
          body: |
            {
              "name" : "${fruitName} - ${randomNumber}"
            }
          handler:
            body:
              json:
                query: .id
                toVar: fruitId
  - getAllFruits:
      - httpRequest:
          GET: /entity/fruits
          handler:
            body:
              json:
                query: '.[].id'
                toArray: 'fruitIds[3]'
      - getSize:
          fromVar: fruitIds
          toVar: length
      - fail:
          intCondition:
            fromVar: length
            lessThan: 3
  - getFruitById:
      - httpRequest:
          GET: '/entity/fruits/${fruitId}'
  - putFruitById:
      - httpRequest:
          PUT: '/entity/fruits/${fruitId}'
          headers:
            content-type: application/json
          body: |
            {
              "name" : "${fruitName} - ${randomNumber} upd"
            }
  - deleteFruitById:
      - httpRequest:
          DELETE: '/entity/fruits/${fruitId}'